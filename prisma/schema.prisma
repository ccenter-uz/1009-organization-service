// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id                   Int                    @id @default(autoincrement())
  staffNumber          Int                    @map("staff_number") @db.Integer
  status               Int                    @default(1) @db.SmallInt()
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamp
  updatedAt            DateTime?              @updatedAt @map("updated_at")
  deletedAt            DateTime?              @updatedAt @map("deleted_at")
  sub_categories       SubCategory[]
  CategoryTranslations CategoryTranslations[]

  @@map("category")
}

model CategoryTranslations {
  id           Int       @id @default(autoincrement())
  categoryId   Int       @map("category_id")
  languageCode String    @map("language_code")
  name         String
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt    DateTime? @updatedAt @map("updated_at")

  category Category @relation(fields: [categoryId], references: [id])

  @@map("category_translations")
}

model SubCategory {
  id          Int       @id @default(autoincrement())
  staffNumber Int       @map("staff_number") @db.Integer
  status      Int       @default(1) @db.SmallInt()
  categoryId  Int       @map("category_id")
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime? @updatedAt @map("updated_at")
  deletedAt   DateTime? @updatedAt @map("deleted_at")

  category                Category                  @relation(fields: [categoryId], references: [id])
  SubCategoryTranslations SubCategoryTranslations[]

  @@map("sub_category")
}

model SubCategoryTranslations {
  id            Int       @id @default(autoincrement())
  subCategoryId Int       @map("sub_category_id")
  languageCode  String    @map("language_code")
  name          String
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt     DateTime? @updatedAt @map("updated_at")

  subCategory SubCategory @relation(fields: [subCategoryId], references: [id])

  @@map("sub_category_translations")
}

model MainOrganization {
  id          Int       @id @default(autoincrement())
  name        String
  staffNumber Int       @map("staff_number") @db.Integer
  status      Int       @default(1) @db.SmallInt()
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime? @updatedAt @map("updated_at")
  deletedAt   DateTime? @updatedAt @map("deleted_at")

  @@map("main_organization")
}

model Section {
  id        Int       @id @default(autoincrement())
  name      String
  status    Int       @default(1) @db.SmallInt()
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @updatedAt @map("deleted_at")

  @@map("section")
}

model Segment {
  id                  Int                   @id @default(autoincrement())
  status              Int                   @default(1) @db.SmallInt()
  createdAt           DateTime              @default(now()) @map("created_at") @db.Timestamp
  updatedAt           DateTime?             @updatedAt @map("updated_at")
  deletedAt           DateTime?             @updatedAt @map("deleted_at")
  SegmentTranslations SegmentTranslations[]

  @@map("segment")
}

model SegmentTranslations {
  id           Int       @id @default(autoincrement())
  segmentId    Int       @map("segment_id")
  languageCode String    @map("language_code")
  name         String
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt    DateTime? @updatedAt @map("updated_at")

  segment Segment @relation(fields: [segmentId], references: [id])

  @@map("segment_translations")
}

model ProductServiceCategory {
  id                                 Int                                  @id @default(autoincrement())
  staffNumber                        Int                                  @map("staff_number") @db.Integer
  status                             Int                                  @default(1) @db.SmallInt()
  createdAt                          DateTime                             @default(now()) @map("created_at") @db.Timestamp
  updatedAt                          DateTime?                            @updatedAt @map("updated_at")
  deletedAt                          DateTime?                            @updatedAt @map("deleted_at")
  product_service_sub_categories     ProductServiceSubCategory[]
  ProductServiceCategoryTranslations ProductServiceCategoryTranslations[]

  @@map("product_service_category")
}

model ProductServiceCategoryTranslations {
  id                       Int       @id @default(autoincrement())
  productServiceCategoryId Int       @map("product_service_category_id")
  languageCode             String    @map("language_code")
  name                     String
  createdAt                DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                DateTime? @updatedAt @map("updated_at")

  productServiceCategory ProductServiceCategory @relation(fields: [productServiceCategoryId], references: [id])

  @@map("product_service_category_translations")
}

model ProductServiceSubCategory {
  id                       Int       @id @default(autoincrement())
  staffNumber              Int       @map("staff_number") @db.Integer
  status                   Int       @default(1) @db.SmallInt()
  productServiceCategoryId Int       @map("product_service_category_id")
  createdAt                DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                DateTime? @updatedAt @map("updated_at")
  deletedAt                DateTime? @updatedAt @map("deleted_at")

  productServiceCategory                ProductServiceCategory                  @relation(fields: [productServiceCategoryId], references: [id])
  productServiceSubCategoryTranslations ProductServiceSubCategoryTranslations[]

  @@map("product_service_sub_category")
}

model ProductServiceSubCategoryTranslations {
  id                         Int       @id @default(autoincrement())
  productServicSubCategoryId Int       @map("product_service_sub_category_id")
  languageCode               String    @map("language_code")
  name                       String
  createdAt                  DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                  DateTime? @updatedAt @map("updated_at")

  productServiceSubCategory ProductServiceSubCategory @relation(fields: [productServicSubCategoryId], references: [id])

  @@map("product_service_sub_category_translations")
}


model Region {
  id                                 Int                                  @id @default(autoincrement())
  status                             Int                                  @default(1) @db.SmallInt()
  createdAt                          DateTime                             @default(now()) @map("created_at") @db.Timestamp
  updatedAt                          DateTime?                            @updatedAt @map("updated_at")
  deletedAt                          DateTime?                            @updatedAt @map("deleted_at")
  City                               City[]
  District                           District[]
  RegionTranslations                 RegionTranslations[]
  Nearby                             Nearby[]
 
  @@map("region")
}

model RegionTranslations {
  id                       Int       @id @default(autoincrement())
  regionId                 Int       @map("region_id")
  languageCode             String    @map("language_code")
  name                     String
  createdAt                DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                DateTime? @updatedAt @map("updated_at")

  Region Region @relation(fields: [regionId], references: [id])

  @@map("region_translations")
}

model City {
  id                                 Int                                  @id @default(autoincrement())
  regionId                           Int                                  @map("region_id")
  status                             Int                                  @default(1) @db.SmallInt()
  createdAt                          DateTime                             @default(now()) @map("created_at") @db.Timestamp
  updatedAt                          DateTime?                            @updatedAt @map("updated_at")
  deletedAt                          DateTime?                            @updatedAt @map("deleted_at")
  Region                             Region            @relation(fields: [regionId],   references: [id])
  District                           District[] 
  CityTranslations                   CityTranslations[]
  Nearby                             Nearby[]
  @@map("city")
}

model CityTranslations {
  id                       Int       @id @default(autoincrement())
  cityId                   Int       @map("city_id")
  languageCode             String    @map("language_code")
  name                     String
  createdAt                DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                DateTime? @updatedAt @map("updated_at")

  City City @relation(fields: [cityId], references: [id])

  @@map("city_translations")
}

model District {
  id                                 Int                                  @id @default(autoincrement())
  regionId                           Int                                  @map("region_id")
  cityId                             Int                                  @map("city_id")
  status                             Int                                  @default(1) @db.SmallInt()
  index                              Int                                  @default(1) @db.SmallInt()
  staffId                            Int                                  @default(1) @db.SmallInt() @map("staff_id")
  createdAt                          DateTime                             @default(now()) @map("created_at") @db.Timestamp
  updatedAt                          DateTime?                            @updatedAt @map("updated_at")
  deletedAt                          DateTime?                            @updatedAt @map("deleted_at")
  Region                             Region                               @relation(fields: [regionId],   references: [id])
  City                               City                                 @relation(fields: [cityId],   references: [id])
  DistrictTranslations               DistrictTranslations[]
  DistrictOldNameTranslations        DistrictOldNameTranslations[]
  DistrictNewNameTranslations        DistrictNewNameTranslations[]

  @@map("district")
}

model DistrictTranslations {
  id                       Int       @id @default(autoincrement())
  districtId                   Int       @map("district_id")
  languageCode             String    @map("language_code")
  name                     String
  createdAt                DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                DateTime? @updatedAt @map("updated_at")

  District District @relation(fields: [districtId], references: [id])

  @@map("district_translations")
}


model DistrictOldNameTranslations {
  id                       Int       @id @default(autoincrement())
  districtId                   Int       @map("district_id")
  languageCode             String    @map("language_code")
  name                     String
  createdAt                DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                DateTime? @updatedAt @map("updated_at")

  District District @relation(fields: [districtId], references: [id])

  @@map("district_new_name_translations")
}


model DistrictNewNameTranslations {
  id                       Int       @id @default(autoincrement())
  districtId                   Int       @map("district_id")
  languageCode             String    @map("language_code")
  name                     String
  createdAt                DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                DateTime? @updatedAt @map("updated_at")

  District District @relation(fields: [districtId], references: [id])

  @@map("district_old_name_translations")
}

model NearbyCategory {
  id                   Int                    @id @default(autoincrement())
  name                 String    
  staffNumber          Int                    @map("staff_number") @db.Integer
  status               Int                    @default(1) @db.SmallInt()
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamp
  updatedAt            DateTime?              @updatedAt @map("updated_at")
  deletedAt            DateTime?              @updatedAt @map("deleted_at")
  Nearby               Nearby[]
  // CategoryTranslations CategoryTranslations[]

  @@map("nearby_category")
}

model Nearby {
  id                Int             @id @default(autoincrement())
  staffNumber       Int             @map("staff_number") @db.Integer
  status            Int             @default(1) @db.SmallInt()
  nearbyCategoryId  Int             @map("nearby_category_id")
    regionId        Int             @map("region_id")
  cityId            Int             @map("city_id")
  createdAt         DateTime        @default(now()) @map("created_at") @db.Timestamp
  updatedAt         DateTime?       @updatedAt @map("updated_at")
  deletedAt         DateTime?       @updatedAt @map("deleted_at")

  NearbyCategory                NearbyCategory                  @relation(fields: [nearbyCategoryId], references: [id])
  Region                        Region                          @relation(fields: [regionId], references: [id])
  City                          City                            @relation(fields: [cityId], references: [id])
  NearbyTranslations       NearbyTranslations[]
  @@map("nearby")
}

model NearbyTranslations {
  id            Int       @id @default(autoincrement())
  nearbyId      Int       @map("nearby_id")

  languageCode  String    @map("language_code")
  name          String
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt     DateTime? @updatedAt @map("updated_at")

  Nearby Nearby @relation(fields: [nearbyId], references: [id])


  @@map("nearby_translations")
}