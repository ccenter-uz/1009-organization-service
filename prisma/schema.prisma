// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id                   Int                    @id @default(autoincrement())
  staffNumber          Int                    @map("staff_number") @db.Integer
  status               Int                    @default(1) @db.SmallInt()
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamp
  updatedAt            DateTime?              @updatedAt @map("updated_at")
  deletedAt            DateTime?              @updatedAt @map("deleted_at")
  sub_categories       SubCategory[]
  CategoryTranslations CategoryTranslations[]

  @@map("category")
}

model CategoryTranslations {
  id           Int       @id @default(autoincrement())
  categoryId   Int       @map("category_id")
  languageCode String    @map("language_code")
  name         String
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt    DateTime? @updatedAt @map("updated_at")

  category Category @relation(fields: [categoryId], references: [id])

  @@map("category_translations")
}

model SubCategory {
  id          Int       @id @default(autoincrement())
  staffNumber Int       @map("staff_number") @db.Integer
  status      Int       @default(1) @db.SmallInt()
  categoryId  Int       @map("category_id")
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime? @updatedAt @map("updated_at")
  deletedAt   DateTime? @updatedAt @map("deleted_at")

  category                Category                  @relation(fields: [categoryId], references: [id])
  SubCategoryTranslations SubCategoryTranslations[]

  @@map("sub_category")
}

model SubCategoryTranslations {
  id            Int       @id @default(autoincrement())
  subCategoryId Int       @map("sub_category_id")
  languageCode  String    @map("language_code")
  name          String
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt     DateTime? @updatedAt @map("updated_at")

  subCategory SubCategory @relation(fields: [subCategoryId], references: [id])

  @@map("sub_category_translations")
}

model MainOrganization {
  id                   Int                    @id @default(autoincrement())
  name                 String
  staffNumber          Int                    @map("staff_number") @db.Integer
  status               Int                    @default(1) @db.SmallInt()
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamp
  updatedAt            DateTime?              @updatedAt @map("updated_at")
  deletedAt            DateTime?              @updatedAt @map("deleted_at")

  @@map("main_organization")
}

model Section { 
  id                   Int                    @id @default(autoincrement())
  name                 String
  status               Int                    @default(1) @db.SmallInt()
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamp
  updatedAt            DateTime?              @updatedAt @map("updated_at")
  deletedAt            DateTime?              @updatedAt @map("deleted_at")

  @@map("section")
}

model Segment {
  id                   Int                    @id @default(autoincrement())
  status               Int                    @default(1) @db.SmallInt()
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamp
  updatedAt            DateTime?              @updatedAt @map("updated_at")
  deletedAt            DateTime?              @updatedAt @map("deleted_at")
  SegmentTranslations SegmentTranslations[]

  @@map("segment")
}

model SegmentTranslations {
  id           Int       @id @default(autoincrement())
  segmentId   Int       @map("segment_id")
  languageCode String    @map("language_code")
  name         String
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt    DateTime? @updatedAt @map("updated_at")

  segment Segment @relation(fields: [segmentId], references: [id])

  @@map("segment_translations")
} 


model ProductServiceCategory {
  id                   Int                    @id @default(autoincrement())
  staffNumber          Int                    @map("staff_number") @db.Integer
  status               Int                    @default(1) @db.SmallInt()
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamp
  updatedAt            DateTime?              @updatedAt @map("updated_at")
  deletedAt            DateTime?              @updatedAt @map("deleted_at")
  product_service_sub_categories       ProductServiceSubCategory[]
  ProductServiceCategoryTranslations ProductServiceCategoryTranslations[]

  @@map("product_service_category")
}

model ProductServiceCategoryTranslations {
  id                         Int       @id @default(autoincrement())
  productServiceCategoryId   Int       @map("product_service_category_id")
  languageCode               String    @map("language_code")
  name                       String
  createdAt                  DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                  DateTime? @updatedAt @map("updated_at")

  productServiceCategory ProductServiceCategory @relation(fields: [productServiceCategoryId], references: [id])

  @@map("product_service_category_translations")
}

model ProductServiceSubCategory {
  id                         Int       @id @default(autoincrement())
  staffNumber                Int       @map("staff_number") @db.Integer
  status                     Int       @default(1) @db.SmallInt()
  productServiceCategoryId   Int       @map("product_service_category_id")
  createdAt                  DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                  DateTime? @updatedAt @map("updated_at")
  deletedAt                  DateTime? @updatedAt @map("deleted_at")

  productServiceCategory ProductServiceCategory @relation(fields: [productServiceCategoryId], references: [id])
  productServiceSubCategoryTranslations ProductServiceSubCategoryTranslations[]

  @@map("product_service_sub_category")
}

model ProductServiceSubCategoryTranslations {
  id                           Int       @id @default(autoincrement())
  productServicSubCategoryId   Int       @map("product_service_sub_category_id")
  languageCode                 String    @map("language_code")
  name                         String
  createdAt                    DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt                    DateTime? @updatedAt @map("updated_at")

  productServiceSubCategory ProductServiceSubCategory @relation(fields: [productServicSubCategoryId], references: [id])

  @@map("product_service_sub_category_translations")
}

